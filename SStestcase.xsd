<?xml version="1.0" encoding="utf-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" >
  <xs:include schemaLocation="SSFunctionNames.xsd"/>
<!--<xs:include schemaLocation="SSFunctionPath.xsd"/>-->
  
  <xs:complexType name="instructionAttributeWithSwitch">
		<xs:attribute name="onerror" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies whether the test case has to continue/break on encountering an error. Default value is break
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="continue">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Continue with the next instruction though an error has occured
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>

					<xs:enumeration value="break">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Break the testcase and mark it as failed, when an error has occured.(Default)
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="switch" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Defines mode of browser switching. Mode can be 'priority' (by Default) or 'none'.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="priority">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Switches to browser with higher priority among the supported browser.
								When switch is not specified, default value for the switch will be priority.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>

					<xs:enumeration value="none">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The switching will not happen untill the executing browser is not supported by the testcase.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="instructionAttribute">
		<xs:attribute name="onerror" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Specifies whether the test case has to continue/break on encountering an error. Default value is break
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="continue">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Continue with the next instruction though an error has occured
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>

					<xs:enumeration value="break">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Break the testcase and mark it as failed, when an error has occured.(Default)
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="instructionAttributeWithTimeOut">
		<xs:complexContent>
			<xs:extension base="instructionAttribute">
				<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Time in milliseconds, after which this command will return an error.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="actioninstructions">
		<xs:choice>
			<xs:element name="call" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Calls a testcase, name of the testcase and its path has to be provided
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttributeWithSwitch">
							<xs:sequence>
								<xs:element name="dataset" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element maxOccurs="unbounded" name="map">
												<xs:complexType>
													<xs:attribute name="var" type="xs:string" use="required" />
													<xs:attribute name="value" type="xs:string" use="required" />
												</xs:complexType>
											</xs:element>
										</xs:sequence>

										<xs:attribute name="ref" use="required">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="context"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:complexType>
								</xs:element>

							</xs:sequence>

              
              <xs:attribute name="name" use="required" type="ssfunctionNames" >
							</xs:attribute>
							<xs:attribute name="path" use="required" type="ssfunctionPath" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Path of the test case being called. Given relative to the XML base path.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="type" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Sets the value of an input field, as though you typed it in. Can also be used to set the value of combo boxes, check boxes, etc. In these cases, value should be the value of the option selected, not the visible text.
						Mandatory fields are locator and value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="locator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Element locator. Mandatory
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the locator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="value" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										The value to type
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="click" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a link, button, image, checkbox or radio button.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="locator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Element locator. Mandatory
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the locator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="highlight" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Highlights the given control.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="locator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Element locator. Mandatory
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the locator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="rundbjob" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Runs the database job and waits till the job is executed fully..
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="name" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Name of the job to run
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="switch" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Switches to specified browser.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="mode" use="required">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Defines mode of browser switching. Mode can be 'priority' (by Default) or 'none'.
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="priority">
											<xs:annotation>
												<xs:documentation xml:lang="en">
													Switches to browser with higher priority among the supported browser.
													When switch is not specified, default value for the switch will be priority.
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>

										<xs:enumeration value="none">
											<xs:annotation>
												<xs:documentation xml:lang="en">
													The switching will not happen untill the executing browser is not supported by the testcase.
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandwaitforpopupandselect" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a locator and waits for a new popup to appear and then selects the new popup. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttribute">
							<xs:attribute name="locator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Element locator. Mandatory
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the locator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Time in milliseconds, after which this command will return an error.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandselectcrossdomainwindow" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a locator and waits for a cross domain popup to appear and then selects the new popup. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttributeWithTimeOut">
							<xs:attribute name="locator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Element locator. Mandatory
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the locator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandwaitforpageload" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a locator and waits for a new page to load. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Time in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="navigate" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Navigate through a menu. Path is mandatory
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="path" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Path through which to navigate in a menu. Example: Manage_ManageConfigurations_RoleManagement
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="addselection" minOccurs="0"  maxOccurs="unbounded" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Add a selection to the set of selected options in a multi-select element using an option locator.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a multi-select box.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An option locator (a label by default)
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionlocatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the optionlocator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clicktocheck" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Check a toggle-button (checkbox/radio). If any specific event on check, use fireevent after this. Ideally use "click" to check/uncheck as the events on check/uncheck are fired during "click"
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a toggle-button.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="choosecancel" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						This command, clicks on the cancel button for the next call to a window's confirm(). By default the OK of an alert/confirm is clicked. To click on 'Cancel' this instruction has to be used.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandwaitforcontrolload" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a locator and waits for a control to be loaded. locator and controlid are mandatory. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator to be clicked. Mandatory.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="controlid" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator/id of the control to wait for.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="controlidreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the controlid during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Time in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandwaitfortextload" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a locator and waits for a text to be loaded. locator and pattern are mandatory. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator to be clicked. Mandatory.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="pattern" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A pattern to match with the text of the page .
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Time in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforcontrolload" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a control to be loaded. Controlid is mandatory. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="controlid" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator/id of the control to wait for.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="controlidreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the controlid during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Time in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickat" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a link, button, checkbox or radio button. If the click action causes a new page to load (like a link usually does), call waitForPageToLoad.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="coordstring" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies the x,y position (i.e. - 10,20) of the mouse event relative to the element returned by the locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="close"  maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates the user clicking the "close" button in the titlebar of a popup window or tab.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="createcookie" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Create a new cookie whose path and domain are same with those of current page under test,
						unless you specified a path for this cookie explicitly.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="namevaluepair" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Name and value of the cookie in a format "name=value"
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionsstring" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								options for the cookie. Currently supported options include 'path' and 'max_age'. the optionsString's format is "path=/path/, max_age=60".
								The order of options are irrelevant, the unit of the value of 'max_age' is second.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="doubleclick" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Double clicks on a link, button, checkbox or radio button
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="draganddrop" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Drags an element a certain distance and then drops it
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator of element to be dragged. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="movementsstring" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Offset in pixels from the current location to which the element should be moved, e.g., "+70,-300".  .
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="draganddroptoobject" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Drags an element and drops it on another element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="srcobjlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator of element to be dragged. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="destintionobjlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element whose location (i.e., whose center-most pixel) will be the point where dragged object is dropped. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="srcobjlocatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the srcobjlocator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="destintionobjlocatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the destintionobjlocator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="fireevent" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Explicitly simulate an event, to trigger the corresponding "onevent" handler.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="eventname" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								the event name, e.g. "focus" or "blur".
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="answernextprompt" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Instructs to return the specified answer string in response to the next JavaScript prompt [window.prompt()].
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="confirmation" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Confirm either OK or Cancel. Mandatory
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="OK"/>
								<xs:enumeration value="Cancel"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="answer" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								the answer to give in response to the prompt pop-up
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="goback" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates the user clicking the "back" button on their browser.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="keydown" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates a user pressing a key (without releasing it yet).
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="keyascii" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Either be a string("\" followed by the numeric keycode of the key to be pressed, normally the ASCII value of that key), or a single character. For example: "w", "\119".
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="keypress" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates a user pressing and releasing a key.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="keyascii" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Either be a string("\" followed by the numeric keycode of the key to be pressed, normally the ASCII value of that key), or a single character. For example: "w", "\119".
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="keyup" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates a user releasing a key.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="keyascii" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Either be a string("\" followed by the numeric keycode of the key to be pressed, normally the ASCII value of that key), or a single character. For example: "w", "\119".
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="mouseover" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates a user hovering a mouse over the specified element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>

			<!--<xs:element name="open" maxOccurs="unbounded">
												<xs:complexType>
													<xs:attribute name="url" type="xs:string" use="required" />
													<xs:attribute name="timeout" type="xs:string" use="optional" />
													<xs:attribute name="onerror" use="optional">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:enumeration value="continue"/>
																<xs:enumeration value="break"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:attribute>
												</xs:complexType>
											</xs:element>-->

			<xs:element name="openwindow" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Opens a popup window (if a window with that ID isn't already open). After opening the window, you'll need to select it using the selectWindow command.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="url" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The URL to open, which can be blank.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="windowid" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The JavaScript window ID of the window to select.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="refresh" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Simulates the user clicking the "Refresh" button on their browser.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="removeselection" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Remove a selection from the set of selected options in a multi-select element using an option locator.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								an element locator identifying a multi-select box. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An option locator (a label by default).
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selectframe" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Selects a frame within the current window. (You may invoke this command multiple times to select nested frames.) To select the parent frame, use "relative=parent" as a locator; to select the top frame, use "relative=top". You can also select a frame by its 0-based index number; select the first frame with "index=0", or the third frame with "index=2".
						You may also use a DOM expression to identify the frame you want directly, like this: dom=frames["main"].frames["subframe"]
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a frame or iframe.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforframeload" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a new frame to load.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a frame or iframe.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selectoption" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Select an option from a drop-down using an option locator.
						Option locators provide different ways of specifying options of an HTML Select element (e.g. for selecting a specific option, or for asserting that the selected option satisfies a specification).
						There are several forms of Select Option Locator.

						label=labelPattern: matches options based on their labels, i.e. the visible text. (This is the default.)
						value=valuePattern: matches options based on their values.
						id=id: matches options based on their ids.
						index=index: matches an option based on its index (offset from zero).
						If no option locator prefix is provided, the default behaviour is to match on label.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="selectlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionlocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An option locator (a label by default).
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="selectlocatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the selectlocator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="optionlocatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the optionlocator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selectoptionandwaitforpageload" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Select an option from a drop-down using an option locator.
						Option locators provide different ways of specifying options of an HTML Select element (e.g. for selecting a specific option, or for asserting that the selected option satisfies a specification).
						There are several forms of Select Option Locator.

						label=labelPattern: matches options based on their labels, i.e. the visible text. (This is the default.)
						value=valuePattern: matches options based on their values.
						id=id: matches options based on their ids.
						index=index: matches an option based on its index (offset from zero).
						If no option locator prefix is provided, the default behaviour is to match on label.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="instructionAttributeWithTimeOut">
							<xs:attribute name="selectlocator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										An element locator identifying a drop-down menu.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="optionlocator" type="xs:string" use="required" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										An option locator (a label by default).
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="selectlocatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the selectlocator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="optionlocatorreplacements" type="xs:string" use="optional" >
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Testdata or variable to be replaced in the optionlocator during build or run.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="selectwindow" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Selects a popup window; once a popup window has been selected, all commands go to that window. To select the main window again, use null as the target.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="winid" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								the JavaScript window ID of the window to select.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selectonloadwindow" maxOccurs="unbounded"  minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Selects a popup window which has been opened by page onload event; once a popup window has been selected, all commands go to that window. To select the main window again, use null as the target.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="winid" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								the JavaScript window ID of the window to select.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<!--<xs:element name="stop" maxOccurs="unbounded"></xs:element>-->

			<xs:element name="clicktouncheck" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Uncheck a toggle-button (checkbox/radio). If any specific event on uncheck, use fireevent after this. Ideally use "click" to check/uncheck as the events on check/uncheck are fired during "click"
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforcontrolenable" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a control to be enabled .
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator of the control. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforcondition" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Runs the specified JavaScript snippet repeatedly until it evaluates to "true".Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="script" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The JavaScript snippet to run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A timeout in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforpagetoload" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a new page to load. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="timeout" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A timeout in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforpopup" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a popup window to appear and load up. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="windowid" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The JavaScript window ID of the window that will appear.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>

					<xs:attribute name="timeout" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A timeout in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforbrowserstability" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for a browser to completely load and to be in ready state. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>

				<xs:complexType>
					<xs:attribute name="timeout" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								A timeout in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickandselectmodaldialog" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Performs the click on a locator which opens a modal dialog window and selects the opened dialog window. For non modal windows, open window, selectwindow can be used.
						clickandselectmodaldialog should always have a corresponding acceptmodalvalue which after closing the modalwindow.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator of the control. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selecttopwindow" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Selects the top most window. In case of no other windows opened, the current (main) window is selected.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="selecttopframe" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Selects the top most frame.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="windowfocus" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Set focus on the window.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="acceptmodalvalue"  maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the values from the modal window to the called window. Should be called immediately after closing the modal window. Each clickandselectmodaldialog should have a corresponding acceptmodalvalue .
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="focus" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Set focus on the given control.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator on which the focus is needed.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="wintype" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Types the given string on the focused window. This can performs outside the browser even.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The value to be typed.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="winkeypress" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Generates a character by character key events supplied in an array.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="keys" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Array of keys.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="seperator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Character/ string seperating items within the array.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="typeintofileupload" maxOccurs="unbounded" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Directly types the file name into a file upload dialog box.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator on which the filename has to be typed.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="value" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The value to be typed into the locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="clickonpaginatedlist" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Clicks on a particular element on a paginated list. Traverses the paginated list until its end or the desired element is found.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator which has to be clicked. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="nextpagelocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator of the pagination control to be clicked.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="traversepaginatedlist" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Traverses the paginated list until its end or the desired element is found.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator which has to be clicked. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="nextpagelocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator of the pagination control to be clicked.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="waitforoverlaytoclose" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Waits for the overlay to close. Parameter timeout is optional. If not specified it waits for time specified in maxWait(in UI tool/starter.xml). If not specified as maxWait too, the default value of timeout is 1 minute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator of the overlay. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="timeout" type="xs:unsignedInt" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Time in milliseconds, after which this command will return an error.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="closeallpopups" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Closes all window popups and selects the main window
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="takescreenshot" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Takes the screenshot and the HTML source. Mostly used when an ops fails.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:group name="assertinstructions">
		<xs:choice>
			<xs:element name="isalertpresent"  maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether an alert window is present and compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isconfirmationpresent"  maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether an confirmation dialog is present and compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ispromptpresent"  maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether a prompt window is present and compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isbrowserloaded"  maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the document's readyState is complete and returns true/false, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ischecked" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the checkbox identified by 'locator' is checked or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="iseditable" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the control identified by 'locator' is editable, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isenabled" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the control identified by 'locator' is enabled, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="onerror" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue"/>
								<xs:enumeration value="break"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isexists" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the control identified by 'locator' exists or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="issomethingselected" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the select control identified by 'locator' is selected or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="htmlcontains" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the text identified by 'pattern' is present on the HTML source or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="pattern" type="xs:string" use="required" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="istextpresent" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the text identified by 'pattern' is present on the HTML source or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="pattern" type="xs:string" use="required" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isbrowser" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks the executing browser type.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="type" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Expected browser type
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="ff">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Firefox
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="ie">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Internet Explorer
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isvisible" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Checks whether the control identified by 'locator' is visible or not, compares the result with 'expected' attribute value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue"/>
								<xs:enumeration value="break"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="stringcompare" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Compare Pattern 1 and Pattern 2.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="pattern1" type="xs:string" use="required" />
					<xs:attribute name="pattern2" type="xs:string" use="required" />
					<xs:attribute name="ignorecase" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue"/>
								<xs:enumeration value="break"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="expected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true"/>
								<xs:enumeration value="false"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="isexistsonpaginatedlist" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Verify existance by traversing the paginated list until its end or the desired element is found.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator which has to be clicked. Mandatory
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="nextpagelocator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Locator of the pagination control to be clicked.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="retrieveinstructions">
		<xs:choice>
			<xs:element name="getalert" maxOccurs="unbounded" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Retrieves the message of a JavaScript alert generated during the previous action, or fail if there were no alerts.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
								Example: getalert  assignto='@alerttext'
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getprompt" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Retrieves the message of a JavaScript question prompt dialog generated during the previous action.
						Successful handling of the prompt requires prior execution of the answerOnNextPrompt command. If a prompt is generated but you do not get/verify it, the next action will fail.
						Returns the message of the most recent JavaScript question prompt
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getallbuttons" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the IDs of all buttons on the page.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getallfields" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the IDs of all input fields on the page.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getallwindownames" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the names of all windows that the browser knows about
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getallwindowtitles" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the titles of all windows that the browser knows about.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getattribute" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the value of an element attribute.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="xpath" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								an element locator followed by an @ sign and then the name of the attribute, e.g. "td@id
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getattributefromallwindows" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns every instance of some attribute from all known windows.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="attributename" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Name of an attribute on the windows.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getbodytext" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the entire text of the page.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getconfirmation" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Retrieves the message of a JavaScript confirmation dialog generated during the previous action.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getcookie" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Return all cookies of the current page under test.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getcursorposition" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Retrieves the text cursor position in the given input element or textarea; beware, this may not work perfectly on all browsers.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator pointing to an input element or textarea
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="geteval" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the result of evaluating the specified JavaScript snippet.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="script" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								the JavaScript snippet to run					  .
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="gethtmlsource" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Returns the entire HTML source between the opening and closing "html" tags.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getlocation" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the absolute URL of the current page.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedid" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets option element ID for selected option in the specified select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedids" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option element IDs for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedindex" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option element IDs for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedindexes" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option indexes (option number, starting at 0) for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedlabel" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option element IDs for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedlabels" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets option label (visible text) for selected option in the specified select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedvalue" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets option value (value attribute) for selected option in the specified select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectedvalues" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option values (value attributes) for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>

					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getselectoptions" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option labels in the specified select drop-down.
					</xs:documentation>
				</xs:annotation>

				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator identifying a drop-down menu.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="gettable" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the text from a cell of a table.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="tablecelladdress" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The cellAddress syntax tableLocator.row.column, where row and column start at 0. Ex. mytable.1.4 .
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="gettext" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets all option values (value attributes) for selected options in the specified select or multi-select element.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="gettitle" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the title of the current page.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getvalue" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Gets the value of an input field (or anything else with a value parameter). For checkbox/radio elements, the value will be "on" or "off" depending on whether the element is checked or not.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								An element locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getelementpositiontop" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Get Element top position
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="assignto" type="xs:string" use="required" />
					<xs:attribute name="onerror" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue"/>
								<xs:enumeration value="break"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="getelementpositionleft" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Get Element left position
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" />
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" />
					<xs:attribute name="assignto" type="xs:string" use="required" />
					<xs:attribute name="onerror" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue"/>
								<xs:enumeration value="break"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<!--<xs:element minOccurs="0" name="ClickAndWaitForPageLoad">
                      <xs:complexType>
                        <xs:attribute name="locator" type="xs:string" use="required" />
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="call">
                      <xs:complexType>
                        <xs:sequence minOccurs="0">
                          <xs:element name="dataset">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element maxOccurs="unbounded" name="map">
                                  <xs:complexType>
                                    <xs:attribute name="var" type="xs:string" use="required" />
                                    <xs:attribute name="value" type="xs:string" use="required" />
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="ref" type="xs:string" use="required" />
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="path" type="xs:string" use="required" />
                        <xs:attribute name="name" type="xs:string" use="required" />
                      </xs:complexType>
                    </xs:element>                    
                    <xs:element minOccurs="0" name="navigate">
                      <xs:complexType>
                        <xs:attribute name="path" type="xs:string" use="required" />
                      </xs:complexType>
                    </xs:element>-->
			<xs:element name="getelementindex" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Get the relative index of an element to its parent (starting from 0). Example to find the table row in which the user name 'learner1' occurs
						getelementindex locator='//table[@id='tableid']/tr[text()='learner1'] assignto='@variable1' . The testcase can use this @variable1 in the further instructions.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="locator" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Element locator.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="locatorreplacements" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Testdata or variable to be replaced in the locator during build or run.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by this 'get' statement to a variable. Subsequent instructions in this test case can use this variable.
								Example: getelementindex locator='//table[@id='tableid']/tr[text()='learner1'] assignto='@rownum'
								isexists locator='//table[@id='tableid']/tr[@rownum]/td[text()='sometext']
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>


	<xs:group name="miscinstructions">
		<xs:choice>
			<xs:element name="log" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Logs the message info in the rport file if the type falls within the configured level. Default level is Info.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="message" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Message to be logged.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="level" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies the level of the message to be logged in. The accepted levels are trace(lowest), info, warn, error(highest). If log level is set to info in the config file then all logs other than trace will appear in the report file.
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="trace">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Log message at trace level.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="info">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Log message at info level.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="warn">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Log message at warn level.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="error">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Log message at error level.
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="evaluate" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Evaluates a macro and stores the value.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="script" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Macro function.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assignto" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'assignto' stores the value returned by the macro function.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="onerror" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the test case has to continue/break on encountering an error. Default value is break
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="continue">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Continue with the next instruction though an error has occured
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="break">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Break the testcase and mark it as failed, when an error has occured.(Default)
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="do" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Executes the given set of instructions based on signature of the Test data.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice maxOccurs="unbounded">
						<xs:group ref ="instructions" />
					</xs:choice>
					<xs:attribute name="when" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Test data variables required to execute the instructions. It accepts comma seperated test data variable names and executes only when all the variables are given.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="assert"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						All instructions to assert the testcase to be placed within 'assert' section. An 'assert' must be directly placed inside 'ops' section of a testcase.
						Any instruction failure in asserts section fails the testcase.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice maxOccurs="unbounded">
						<xs:group ref ="instructions" />
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="iterate"  minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						'iterate' sections contains a set of instructions which are to be executed multiple times for a ‘Set of Test Data’.Define the data array in testdata file.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice maxOccurs="unbounded">
						<xs:group ref ="instructions" />
					</xs:choice>
					<xs:attribute name="vars" type="xs:string" use="required" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								'vars' contains the list of testdata through which the instructions have to be iterated. In test data file the values for these variables have to be enclosed within '[' ']' and separated by commas.
								Example : 'vars=@UserName,@UserRole' in testdata @UserName=['user1','user2'] and @UserRole=['learner','admin']. An error is thrown if the count of values differ.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="delimiter" type="xs:string" use="optional" >
						<xs:annotation>
							<xs:documentation xml:lang="en">
								By default ',' is the delimiter for values in testdata, use 'delimiter' attribute if using other delimiters.
								Example: iterate vars=@UserName,@UserRole delimiter='|'
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="if"  minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						'If' checks for a condion and if it returns the 'expected' value the corresponding 'ops' section is performed and and it exits the 'if' section, else the next case is checked and so on.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice maxOccurs="unbounded">
							<xs:group ref ="caseinstruction" />
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="conditioninstruction">
		<xs:choice>
			<xs:element name="condition"  minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Operates on a group of statements which return true/false
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice maxOccurs="unbounded">
							<xs:group ref ="assertinstructions" />
							<xs:group ref ="conditioninstruction" />
						</xs:choice>
					</xs:sequence>
					<xs:attribute name="connective" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								Specifies whether the instructions within 'condition' has to be checked with operator 'And' or 'Or'
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="AND">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											All instructions have to be met
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="OR">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Atleast one assert instruction has to be met
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="expected" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								The condition has to return a true/false, else the 'condition' section throws an error failing the testcase
							</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="true">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											Default value
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>

								<xs:enumeration value="false">
									<xs:annotation>
										<xs:documentation xml:lang="en">
											A false is expected after executing instructions within 'condition' section
										</xs:documentation>
									</xs:annotation>
								</xs:enumeration>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="caseinstruction">
		<xs:choice>
			<xs:element name="case"  minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
						'case' section contains 2 parts - the 'condition' where the condition is checked and 'ops' - instructions to perform when the condtions are met.
						if the 'condition' section within case returns not the expected value(default true), the next case section is checked. If 'condition' is satisfied' the corresponding ops for that 'condition' section' is performed and then breaks out of the 'if' section
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice maxOccurs="2"  minOccurs="2">
							<xs:group ref ="conditioninstruction" minOccurs="1" maxOccurs="1" />
							<xs:group ref ="opsinstr" minOccurs="1" maxOccurs="1"/>
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="else"  minOccurs="0" maxOccurs="1" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						if none of the 'condition' in 'case' section are met the 'else' contains the default instructions to be performed.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice  maxOccurs="unbounded">
							<xs:group ref ="opsinstr" />
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="opsinstr">
		<xs:choice>
			<xs:element name="ops"  minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:choice maxOccurs="unbounded">
							<xs:group ref ="instructions" />
						</xs:choice>

					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="instructions">
		<xs:choice>
			<!-- Action commands begin-->
			<xs:group ref="actioninstructions" />
			<!-- Action commands end-->

			<!-- Assert commands begin-->
			<xs:group ref="assertinstructions"/>
			<!-- Assert commands end-->

			<!-- Retrieve commands begin -->
			<xs:group ref="retrieveinstructions" />
			<!-- Retrieve commands end -->

			<!-- Retrieve commands begin -->
			<xs:group ref="miscinstructions" />
			<!-- Retrieve commands end -->

			<!-- Retrieve commands begin -->
			<xs:group ref="conditioninstruction" />
			<!-- Retrieve commands end -->
		</xs:choice>
	</xs:group>

	<xs:element name="testcases">
		<xs:complexType>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" name="testcase">
					<xs:complexType>
						<xs:all>
							<xs:element name="filelog" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										A 'filelog' section holds the changes that had underwent to this file.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="author" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="en">
													Name of the person who created it.
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="log" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation xml:lang="en">
													Additional logs.
												</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="identifiers" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										An 'identifier' section holds all the paths of the identifier files (*.id) used by the testcase.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="include" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation xml:lang="en">
													Includes the specified identifier file.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="path" type="xs:string" use="required" >
													<xs:annotation>
														<xs:documentation xml:lang="en">
															Specifiy the path of the identifier file, relative to the basepath.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="data" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										A 'data' section holds all the testdata variables which are used by the testcase.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element maxOccurs="unbounded" name="var">
											<xs:complexType>
												<xs:attribute name="name" type="xs:string" use="required" />
												<xs:attribute name="optional" type="xs:string" use="optional" />
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="basestate"  minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										Basestate of a testcase is the state to be in before running the testcase. A 'basestate' section is a call to the basestate along with the expected data from the testcase.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="dataset" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" name="map">
														<xs:complexType>
															<xs:attribute name="var" type="xs:string" use="required" >
																<xs:annotation>
																	<xs:documentation xml:lang="en">
																		Variable name expected by the basestate.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="value" type="xs:string" use="required" >
																<xs:annotation>
																	<xs:documentation xml:lang="en">
																		Testdata passed to the basestate variable from the testcase.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ref" use="required">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="context"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="name" type="xs:string" use="required" />
								</xs:complexType>
							</xs:element>
							<xs:element name="ops"  minOccurs="1" maxOccurs="1">
								<xs:complexType>
									<xs:sequence>
										<xs:choice maxOccurs="unbounded">
											<xs:group ref ="instructions" />
										</xs:choice>

									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="cleanup"  minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="en">
										The 'cleanup' section is called when the testcase fails. 'cleanup' contains specific instructions to be performed to cleanup the system and to perform the next testcase or to reattempt the same testcase.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:choice maxOccurs="unbounded">
											<xs:group ref ="instructions" />
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:all>
						<xs:attribute name="name" type="xs:string" use="required" />
						<xs:attribute name="desc" type="xs:string" use="required" />
						<xs:attribute name="browser" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation xml:lang="en">
									Defines all the browsers supported by the testcase as comma seperated list.
									Notations for the browsers is found and can be edited in Starter.xml.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="qcid" type="xs:string" use="optional" />
						<xs:attribute name="version" type="xs:string" use="optional" />
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="version" type="xs:decimal" use="required" />
		</xs:complexType>
	</xs:element>
</xs:schema>
